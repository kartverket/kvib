"use strict";(self.webpackChunk_kvib_storybook=self.webpackChunk_kvib_storybook||[]).push([[95],{"./stories/components/radio/Radio.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Radio:()=>Radio,Size:()=>Size,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _kvib_react_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@chakra-ui/radio/dist/chunk-RULYAY7I.mjs"),_kvib_react_src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@chakra-ui/radio/dist/chunk-X4Z64PN5.mjs"),_kvib_react_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Komponenter/Radio",component:_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,parameters:{docs:{story:{inline:!0},canvas:{sourceState:"shown"}}}},Radio={argTypes:{size:{description:"Size of the Radio",table:{type:{summary:"sm | md | lg"},defaultValue:{summary:"md"}},options:["sm","md","lg"],control:{type:"radio"}},spacing:{description:"The space between the radio icon and its text",table:{type:{summary:"sm | md | lg"},defaultValue:{summary:"md"}},options:["sm","md","lg"],control:{type:"radio"}},aria_describedby:{description:"Refers to the id of the radio's label",table:{type:{summary:"string"},control:{type:"boolean"}}},id:{description:"Refers to the id of the radio",table:{type:{summary:"string"},control:{type:"text"}}},defaultChecked:{description:"If true, the radio wil be initially checked",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},inputProps:{description:"Additional props forwarded to the input element",table:{type:{summary:""}}},isDisabled:{description:"If true, the radio will be disabled",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},variant:{description:"The variant of the radio",table:{type:{summary:"string"}},control:{type:"text"}},isFocusable:{description:"If true, and isDisabled is true, the radio will remain focusable but not interactive",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},isChecked:{description:"If true, the radio will be set as checked. You need to pass onChange to update its value (since it is controlled)",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},isInvalid:{description:"If true, the radio will be invalid. Sets 'aria-invalid' to true",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},isReadOnly:{description:"If true, the radio will be read-only",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},isRequired:{description:"If true, the radio button will be required. Sets 'aria-required' to true",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},name:{description:"The name of the input field in a radio",table:{type:{summary:"string"}},control:{type:"text"}},onChange:{description:"The function that is ran when the state of the radio changes",table:{type:{summary:"callback()"}},defaultValue:{summary:"none"}},colorScheme:{description:"Color of the radio",table:{type:{summary:"green | blue | gray | red | orange | purple"},defaultValue:{summary:"Blue"}},options:["green","blue","gray","red","orange","purple"],control:{type:"select"}}},args:{onChange:void 0},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,children:"Alternativ"})},Color={args:{size:"lg"},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_2__.E,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_3__.K,{direction:"row",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"green",children:"Grønn"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"blue",children:"Blå"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"gray",children:"Grå"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"red",children:"Rød"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"orange",children:"Oransje"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,defaultChecked:!0,colorScheme:"purple",children:"Lilla"})]})})},Size={args:{colorScheme:"green"},render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_2__.E,{defaultValue:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_3__.K,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,size:"sm",value:"1",children:"sm"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,size:"md",value:"2",children:"md"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kvib_react_src__WEBPACK_IMPORTED_MODULE_1__.Y,{...args,size:"lg",value:"3",children:"lg"})]})})};Radio.parameters={...Radio.parameters,docs:{...Radio.parameters?.docs,source:{originalSource:"{\n  argTypes: radioArgTypes,\n  args: {\n    onChange: undefined\n  },\n  render: args => <KvibRadio {...args}>Alternativ</KvibRadio>\n}",...Radio.parameters?.docs?.source}}},Color.parameters={...Color.parameters,docs:{...Color.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "lg"\n  },\n  render: args => <KvibRadioGroup>\n      <KvibStack direction={"row"}>\n        <KvibRadio {...args} defaultChecked colorScheme={"green"}>\n          Grønn\n        </KvibRadio>\n        <KvibRadio {...args} defaultChecked colorScheme={"blue"}>\n          Blå\n        </KvibRadio>\n        <KvibRadio {...args} defaultChecked colorScheme={"gray"}>\n          Grå\n        </KvibRadio>\n        <KvibRadio {...args} defaultChecked colorScheme={"red"}>\n          Rød\n        </KvibRadio>\n        <KvibRadio {...args} defaultChecked colorScheme={"orange"}>\n          Oransje\n        </KvibRadio>\n        <KvibRadio {...args} defaultChecked colorScheme={"purple"}>\n          Lilla\n        </KvibRadio>\n      </KvibStack>\n    </KvibRadioGroup>\n}',...Color.parameters?.docs?.source}}},Size.parameters={...Size.parameters,docs:{...Size.parameters?.docs,source:{originalSource:'{\n  args: {\n    colorScheme: "green"\n  },\n  render: args => <KvibRadioGroup defaultValue="3">\n      <KvibStack>\n        <KvibRadio {...args} size={"sm"} value="1">\n          sm\n        </KvibRadio>\n        <KvibRadio {...args} size={"md"} value="2">\n          md\n        </KvibRadio>\n        <KvibRadio {...args} size={"lg"} value="3">\n          lg\n        </KvibRadio>\n      </KvibStack>\n    </KvibRadioGroup>\n}',...Size.parameters?.docs?.source}}};const __namedExportsOrder=["Radio","Color","Size"]}}]);