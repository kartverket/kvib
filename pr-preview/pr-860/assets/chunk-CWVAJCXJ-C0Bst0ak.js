import{r as m}from"./index-BwDkhjyp.js";import{c as B}from"./index-CHDWSgKD.js";import{c as n,f as E,o as G,s as R,a as $}from"./chunk-ZJJGQIVY-CoI1iMVy.js";import{j as t}from"./extends-CwFRzn3r.js";import{u as z}from"./chunk-7D6N5TE5-DJ-8GvmY.js";import{a as M}from"./chunk-DMO4EI7P-D6u3hnqn.js";import{k as h}from"./emotion-react.browser.esm-DOaDIBza.js";var[se,W]=B({name:"CheckboxGroupContext",strict:!1});function X(o){const[s,r]=m.useState(o),[e,i]=m.useState(!1);return o!==s&&(i(!0),r(o)),e}function L(o){return t.jsx(n.svg,{width:"1.2em",viewBox:"0 0 12 10",style:{fill:"none",strokeWidth:2,stroke:"currentColor",strokeDasharray:16},...o,children:t.jsx("polyline",{points:"1.5 6 4.5 9 10.5 1"})})}function O(o){return t.jsx(n.svg,{width:"1.2em",viewBox:"0 0 24 24",style:{stroke:"currentColor",strokeWidth:4},...o,children:t.jsx("line",{x1:"21",x2:"3",y1:"12",y2:"12"})})}function T(o){const{isIndeterminate:s,isChecked:r,...e}=o,i=s?O:L;return r||s?t.jsx(n.div,{style:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%"},children:t.jsx(i,{...e})}):null}var q={display:"inline-flex",alignItems:"center",justifyContent:"center",verticalAlign:"top",userSelect:"none",flexShrink:0},F={cursor:"pointer",display:"inline-flex",alignItems:"center",verticalAlign:"top",position:"relative"},H=h({from:{opacity:0,strokeDashoffset:16,transform:"scale(0.95)"},to:{opacity:1,strokeDashoffset:0,transform:"scale(1)"}}),J=h({from:{opacity:0},to:{opacity:1}}),K=h({from:{transform:"scaleX(0.65)"},to:{transform:"scaleX(1)"}}),Q=E(function(s,r){const e=W(),i={...e,...s},a=M("Checkbox",i),l=G(s),{spacing:v="0.5rem",className:y,children:u,iconColor:p,iconSize:d,icon:g=t.jsx(T,{}),isChecked:b,isDisabled:I=e==null?void 0:e.isDisabled,onChange:f,inputProps:j,...S}=l;let x=b;e!=null&&e.value&&l.value&&(x=e.value.includes(l.value));let k=f;e!=null&&e.onChange&&l.value&&(k=R(e.onChange,f));const{state:c,getInputProps:_,getCheckboxProps:P,getLabelProps:A,getRootProps:w}=z({...S,isDisabled:I,isChecked:x,onChange:k}),C=X(c.isChecked),N=m.useMemo(()=>({animation:C?c.isIndeterminate?`${J} 20ms linear, ${K} 200ms linear`:`${H} 200ms linear`:void 0,fontSize:d,color:p,...a.icon}),[p,d,C,c.isIndeterminate,a.icon]),D=m.cloneElement(g,{__css:N,isIndeterminate:c.isIndeterminate,isChecked:c.isChecked});return t.jsxs(n.label,{__css:{...F,...a.container},className:$("chakra-checkbox",y),...w(),children:[t.jsx("input",{className:"chakra-checkbox__input",..._(j,r)}),t.jsx(n.span,{__css:{...q,...a.control},className:"chakra-checkbox__control",...P(),children:D}),u&&t.jsx(n.span,{className:"chakra-checkbox__label",...A(),__css:{marginStart:v,...a.label},children:u})]})});Q.displayName="Checkbox";export{se as C,Q as a};
