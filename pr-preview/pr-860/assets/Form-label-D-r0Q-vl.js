import{j as t}from"./extends-CwFRzn3r.js";import{u as m,a as I}from"./chunk-DFWC5MHP-TuRmrrLs.js";import{u as _}from"./chunk-DMO4EI7P-D6u3hnqn.js";import{f as s,o as F,c,a as f}from"./chunk-ZJJGQIVY-CoI1iMVy.js";var p=s(function(a,l){var e;const o=_("FormLabel",a),n=F(a),{className:R,children:h,requiredIndicator:y=t.jsx(b,{}),optionalIndicator:q=null,...d}=n,i=m(),v=(e=i==null?void 0:i.getLabelProps(d,l))!=null?e:{ref:l,...d};return t.jsxs(c.label,{...v,className:f("chakra-form__label",n.className),__css:{display:"block",textAlign:"start",...o},children:[h,i!=null&&i.isRequired?y:q]})});p.displayName="FormLabel";var b=s(function(a,l){const e=m(),o=I();if(!(e!=null&&e.isRequired))return null;const n=f("chakra-form__required-indicator",a.className);return t.jsx(c.span,{...e==null?void 0:e.getRequiredIndicatorProps(a,l),__css:o.requiredIndicator,className:n})});b.displayName="RequiredIndicator";const u=s(({label:r,children:a,...l},e)=>t.jsxs(p,{...l,ref:e,fontWeight:"bold",children:[r,a]}));try{u.displayName="FormLabel",u.__docgenInfo={description:"",displayName:"FormLabel",props:{htmlTranslate:{defaultValue:null,description:"",name:"htmlTranslate",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"yes"'},{value:'"no"'}]}},label:{defaultValue:{value:'"label"'},description:"Label for the form component",name:"label",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:"",name:"requiredIndicator",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},optionalIndicator:{defaultValue:null,description:"",name:"optionalIndicator",required:!1,type:{name:"ReactNode"}},isRequired:{defaultValue:{value:"false"},description:"If `true`, the form control will be required. This has 2 side effects:\n- The `FormLabel` will show a required indicator\n- The form element (e.g, Input) will have `aria-required` set to `true`",name:"isRequired",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:"false"},description:"If `true`, the form control will be disabled. This has 2 side effects:\n- The `FormLabel` will have `data-disabled` attribute\n- The form element (e.g, Input) will be disabled",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isInvalid:{defaultValue:{value:"false"},description:"If `true`, the form control will be invalid. This has 2 side effects:\n- The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n- The form element (e.g, Input) will have `aria-invalid` set to `true`",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},isReadOnly:{defaultValue:{value:"false"},description:"If `true`, the form control will be readonly",name:"isReadOnly",required:!1,type:{name:"boolean | undefined"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"As | undefined"}}}}}catch{}export{u as F};
