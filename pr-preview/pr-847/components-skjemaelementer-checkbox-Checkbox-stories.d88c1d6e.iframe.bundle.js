"use strict";(self.webpackChunk_kvib_storybook=self.webpackChunk_kvib_storybook||[]).push([[4584,1656,3376,8214,6106,6187,5357,9814,4390,1638],{"../../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a1:()=>arrayToObjectNotation,bk:()=>mapResponsive,fi:()=>breakpoints});var _chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@chakra-ui/shared-utils/dist/index.mjs"),breakpoints=Object.freeze(["base","sm","md","lg","xl","2xl"]);function mapResponsive(prop,mapper){return Array.isArray(prop)?prop.map((item=>null===item?null:mapper(item))):(0,_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_0__.Gv)(prop)?Object.keys(prop).reduce(((result,key)=>(result[key]=mapper(prop[key]),result)),{}):null!=prop?mapper(prop):null}function arrayToObjectNotation(values,bps=breakpoints){const result={};return values.forEach(((value,index)=>{const key=bps[index];null!=value&&(result[key]=value)})),result}},"../../node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Text});var _chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@chakra-ui/system/dist/chunk-ZJJGQIVY.mjs"),_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@chakra-ui/system/dist/chunk-DMO4EI7P.mjs"),_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@chakra-ui/styled-system/dist/index.mjs"),_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@chakra-ui/system/dist/chunk-ZHQNHOQS.mjs"),_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@chakra-ui/shared-utils/dist/index.mjs"),_chakra_ui_object_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),Text=(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_1__.R)((function Text2(props,ref){const styles=(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_2__.Vl)("Text",props),{className,align,decoration,casing,...rest}=(0,_chakra_ui_system__WEBPACK_IMPORTED_MODULE_3__.MN)(props),aliasedProps=(0,_chakra_ui_object_utils__WEBPACK_IMPORTED_MODULE_4__.o)({textAlign:props.align,textDecoration:props.decoration,textTransform:props.casing});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_chakra_ui_system__WEBPACK_IMPORTED_MODULE_5__.B.p,{ref,className:(0,_chakra_ui_shared_utils__WEBPACK_IMPORTED_MODULE_6__.cx)("chakra-text",props.className),...aliasedProps,...rest,__css:styles})}));Text.displayName="Text"},"../../node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>Stack});var chunk_ZHQNHOQS=__webpack_require__("../../node_modules/@chakra-ui/system/dist/chunk-ZHQNHOQS.mjs"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),StackItem=props=>(0,jsx_runtime.jsx)(chunk_ZHQNHOQS.B.div,{className:"chakra-stack__item",...props,__css:{display:"inline-block",flex:"0 0 auto",minWidth:0,...props.__css}});StackItem.displayName="StackItem";var chunk_G72KV6MB=__webpack_require__("../../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs");var dist=__webpack_require__("../../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"),shared_utils_dist=__webpack_require__("../../node_modules/@chakra-ui/shared-utils/dist/index.mjs"),chunk_ZJJGQIVY=__webpack_require__("../../node_modules/@chakra-ui/system/dist/chunk-ZJJGQIVY.mjs"),react=__webpack_require__("../../node_modules/react/index.js"),Stack=(0,chunk_ZJJGQIVY.R)(((props,ref)=>{const{isInline,direction:directionProp,align,justify,spacing="0.5rem",wrap,children,divider,className,shouldWrapChildren,...rest}=props,direction=isInline?"row":null!=directionProp?directionProp:"column",dividerStyle=(0,react.useMemo)((()=>function getDividerStyles(options){const{spacing,direction}=options,dividerStyles={column:{my:spacing,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},"column-reverse":{my:spacing,mx:0,borderLeftWidth:0,borderBottomWidth:"1px"},row:{mx:spacing,my:0,borderLeftWidth:"1px",borderBottomWidth:0},"row-reverse":{mx:spacing,my:0,borderLeftWidth:"1px",borderBottomWidth:0}};return{"&":(0,chunk_G72KV6MB.bk)(direction,(value=>dividerStyles[value]))}}({spacing,direction})),[spacing,direction]),hasDivider=!!divider,shouldUseChildren=!shouldWrapChildren&&!hasDivider,clones=(0,react.useMemo)((()=>{const validChildren=(0,dist.a)(children);return shouldUseChildren?validChildren:validChildren.map(((child,index)=>{const key=void 0!==child.key?child.key:index,isLast=index+1===validChildren.length,_child=shouldWrapChildren?(0,jsx_runtime.jsx)(StackItem,{children:child},key):child;if(!hasDivider)return _child;const clonedDivider=(0,react.cloneElement)(divider,{__css:dividerStyle}),_divider=isLast?null:clonedDivider;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[_child,_divider]},key)}))}),[divider,dividerStyle,hasDivider,shouldUseChildren,shouldWrapChildren,children]),_className=(0,shared_utils_dist.cx)("chakra-stack",className);return(0,jsx_runtime.jsx)(chunk_ZHQNHOQS.B.div,{ref,display:"flex",alignItems:align,justifyContent:justify,flexDirection:direction,flexWrap:wrap,gap:hasDivider?void 0:spacing,className:_className,...rest,children:clones})}));Stack.displayName="Stack"},"../../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function compact(object){const clone=Object.assign({},object);for(let key in clone)void 0===clone[key]&&delete clone[key];return clone}__webpack_require__.d(__webpack_exports__,{o:()=>compact})},"../../node_modules/@chakra-ui/react-children-utils/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>getValidChildren});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");function getValidChildren(children){return react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).filter((child=>(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)))}},"../../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Px:()=>mergeRefs,SV:()=>useMergeRefs});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");function mergeRefs(...refs){return node=>{refs.forEach((ref=>{!function assignRef(ref,value){if(null!=ref)if("function"!=typeof ref)try{ref.current=value}catch(error){throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)}else ref(value)}(ref,node)}))}}function useMergeRefs(...refs){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>mergeRefs(...refs)),refs)}},"./stories/components/skjemaelementer/checkbox/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,CheckboxColors:()=>CheckboxColors,CheckboxGroup:()=>CheckboxGroup,CheckboxIndeterminate:()=>CheckboxIndeterminate,CheckboxSizes:()=>CheckboxSizes,CheckboxStates:()=>CheckboxStates,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var chunk_CWVAJCXJ=__webpack_require__("../../node_modules/@chakra-ui/checkbox/dist/chunk-CWVAJCXJ.mjs"),chunk_2OOHT3W5=__webpack_require__("../../node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs"),chunk_CKJ5T3MX=__webpack_require__("../../node_modules/@chakra-ui/checkbox/dist/chunk-CKJ5T3MX.mjs"),chunk_ZHMYA64R=__webpack_require__("../../node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs"),react=__webpack_require__("../../node_modules/react/index.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const IndeterminateExample=()=>{const[checkedItems,setCheckedItems]=(0,react.useState)([!1,!1]),allChecked=checkedItems.every(Boolean),isIndeterminate=checkedItems.some(Boolean)&&!allChecked;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{isChecked:allChecked,isIndeterminate,onChange:e=>setCheckedItems([e.target.checked,e.target.checked]),children:"Parent Checkbox"}),(0,jsx_runtime.jsxs)(chunk_ZHMYA64R.B,{pl:6,mt:1,spacing:1,children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{isChecked:checkedItems[0],iconSize:"3rem",onChange:e=>setCheckedItems([e.target.checked,checkedItems[1]]),children:"Child Checkbox 1"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{isChecked:checkedItems[1],onChange:e=>setCheckedItems([checkedItems[0],e.target.checked]),children:"Child Checkbox 2"})]})]})};const Checkbox_stories={title:"Skjemaelementer/Checkbox",component:chunk_CWVAJCXJ.S,parameters:{docs:{story:{inline:!0},canvas:{sourceState:"shown"}}},argTypes:{colorScheme:{description:"The color of the Checkbox",table:{type:{summary:"green | blue"},defaultValue:{summary:"green"}},control:"radio",options:["green","blue"]},size:{description:"The size of the checkbox",table:{type:{summary:"sm | md | lg"},defaultValue:{summary:"md"}},control:"radio",options:["sm","md","lg"]},isDisabled:{description:"If true, the checkbox will be disabled",table:{type:{summary:"true | false"},defaultValue:{summary:!1}},control:"boolean"},isInvalid:{description:"If true, the checkbox will be invalid",table:{type:{summary:"true | false"},defaultValue:{summary:!1}},control:"boolean"},iconColor:{description:"The color of the checkmark",table:{type:{summary:"css | color variable"},defaultValue:{summary:"white"}},control:"color"}}},Checkbox={args:{children:"Dette er en avmerkingsboks"},render:args=>(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,defaultChecked:!0,children:args.children})},CheckboxColors={args:{},render:args=>(0,jsx_runtime.jsxs)(chunk_ZHMYA64R.B,{children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,colorScheme:"blue",children:"Blå"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,colorScheme:"green",children:"Grønn"})]})},CheckboxSizes={args:{children:"Huk av"},render:args=>(0,jsx_runtime.jsxs)(chunk_ZHMYA64R.B,{children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,size:"sm",children:args.children}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,size:"md",children:args.children}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,size:"lg",children:args.children})]})},CheckboxStates={args:{},render:args=>(0,jsx_runtime.jsxs)(chunk_ZHMYA64R.B,{direction:"row",gap:4,children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,children:"Normal"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{isDisabled:!0,children:"Disabled"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{isInvalid:!0,children:"Invalid"})]})},CheckboxGroup={args:{},render:args=>(0,jsx_runtime.jsxs)(chunk_ZHMYA64R.B,{children:[(0,jsx_runtime.jsx)(chunk_2OOHT3W5.E,{as:"b",children:"Grønn"}),(0,jsx_runtime.jsxs)(chunk_CKJ5T3MX.$,{colorScheme:"green",children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,children:"Valg 1"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,children:"Valg 2"})]}),(0,jsx_runtime.jsx)(chunk_2OOHT3W5.E,{as:"b",children:"Blå"}),(0,jsx_runtime.jsxs)(chunk_CKJ5T3MX.$,{colorScheme:"blue",children:[(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,children:"Valg 1"}),(0,jsx_runtime.jsx)(chunk_CWVAJCXJ.S,{...args,children:"Valg 2"})]})]})},CheckboxIndeterminate={args:{},render:args=>(0,jsx_runtime.jsx)(IndeterminateExample,{...args})};Checkbox.parameters={storySource:{source:'{\n  args: {\n    children: "Dette er en avmerkingsboks",\n  },\n  render: (args) => (\n    <KvibCheckbox {...args} defaultChecked>\n      {args.children}\n    </KvibCheckbox>\n  ),\n}'},...Checkbox.parameters},CheckboxColors.parameters={storySource:{source:'{\n  args: {},\n  render: (args) => (\n    <Stack>\n      <KvibCheckbox {...args} colorScheme="blue">\n        Blå\n      </KvibCheckbox>\n      <KvibCheckbox {...args} colorScheme="green">\n        Grønn\n      </KvibCheckbox>\n    </Stack>\n  ),\n}'},...CheckboxColors.parameters},CheckboxSizes.parameters={storySource:{source:'{\n  args: {\n    children: "Huk av",\n  },\n  render: (args) => (\n    <Stack>\n      <KvibCheckbox {...args} size="sm">\n        {args.children}\n      </KvibCheckbox>\n      <KvibCheckbox {...args} size="md">\n        {args.children}\n      </KvibCheckbox>\n      <KvibCheckbox {...args} size="lg">\n        {args.children}\n      </KvibCheckbox>\n    </Stack>\n  ),\n}'},...CheckboxSizes.parameters},CheckboxStates.parameters={storySource:{source:'{\n  args: {},\n  render: (args) => (\n    <Stack direction={"row"} gap={4}>\n      <KvibCheckbox {...args}>Normal</KvibCheckbox>\n      <KvibCheckbox isDisabled>Disabled</KvibCheckbox>\n      <KvibCheckbox isInvalid>Invalid</KvibCheckbox>\n    </Stack>\n  ),\n}'},...CheckboxStates.parameters},CheckboxGroup.parameters={storySource:{source:'{\n  args: {},\n  render: (args) => (\n    <Stack>\n      <Text as={"b"}>Grønn</Text>\n      <KvibCheckboxGroup colorScheme="green">\n        <KvibCheckbox {...args}>Valg 1</KvibCheckbox>\n        <KvibCheckbox {...args}>Valg 2</KvibCheckbox>\n      </KvibCheckboxGroup>\n      <Text as={"b"}>Blå</Text>\n      <KvibCheckboxGroup colorScheme="blue">\n        <KvibCheckbox {...args}>Valg 1</KvibCheckbox>\n        <KvibCheckbox {...args}>Valg 2</KvibCheckbox>\n      </KvibCheckboxGroup>\n    </Stack>\n  ),\n}'},...CheckboxGroup.parameters},CheckboxIndeterminate.parameters={storySource:{source:"{\n  args: {},\n  render: (args) => <IndeterminateExample {...args} />,\n}"},...CheckboxIndeterminate.parameters},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Dette er en avmerkingsboks"\n  },\n  render: args => <KvibCheckbox {...args} defaultChecked>\n      {args.children}\n    </KvibCheckbox>\n}',...Checkbox.parameters?.docs?.source}}},CheckboxColors.parameters={...CheckboxColors.parameters,docs:{...CheckboxColors.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => <Stack>\n      <KvibCheckbox {...args} colorScheme="blue">\n        Blå\n      </KvibCheckbox>\n      <KvibCheckbox {...args} colorScheme="green">\n        Grønn\n      </KvibCheckbox>\n    </Stack>\n}',...CheckboxColors.parameters?.docs?.source}}},CheckboxSizes.parameters={...CheckboxSizes.parameters,docs:{...CheckboxSizes.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: "Huk av"\n  },\n  render: args => <Stack>\n      <KvibCheckbox {...args} size="sm">\n        {args.children}\n      </KvibCheckbox>\n      <KvibCheckbox {...args} size="md">\n        {args.children}\n      </KvibCheckbox>\n      <KvibCheckbox {...args} size="lg">\n        {args.children}\n      </KvibCheckbox>\n    </Stack>\n}',...CheckboxSizes.parameters?.docs?.source}}},CheckboxStates.parameters={...CheckboxStates.parameters,docs:{...CheckboxStates.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => <Stack direction={"row"} gap={4}>\n      <KvibCheckbox {...args}>Normal</KvibCheckbox>\n      <KvibCheckbox isDisabled>Disabled</KvibCheckbox>\n      <KvibCheckbox isInvalid>Invalid</KvibCheckbox>\n    </Stack>\n}',...CheckboxStates.parameters?.docs?.source}}},CheckboxGroup.parameters={...CheckboxGroup.parameters,docs:{...CheckboxGroup.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => <Stack>\n      <Text as={"b"}>Grønn</Text>\n      <KvibCheckboxGroup colorScheme="green">\n        <KvibCheckbox {...args}>Valg 1</KvibCheckbox>\n        <KvibCheckbox {...args}>Valg 2</KvibCheckbox>\n      </KvibCheckboxGroup>\n      <Text as={"b"}>Blå</Text>\n      <KvibCheckboxGroup colorScheme="blue">\n        <KvibCheckbox {...args}>Valg 1</KvibCheckbox>\n        <KvibCheckbox {...args}>Valg 2</KvibCheckbox>\n      </KvibCheckboxGroup>\n    </Stack>\n}',...CheckboxGroup.parameters?.docs?.source}}},CheckboxIndeterminate.parameters={...CheckboxIndeterminate.parameters,docs:{...CheckboxIndeterminate.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <IndeterminateExample {...args} />\n}",...CheckboxIndeterminate.parameters?.docs?.source}}};const __namedExportsOrder=["Checkbox","CheckboxColors","CheckboxSizes","CheckboxStates","CheckboxGroup","CheckboxIndeterminate"]}}]);