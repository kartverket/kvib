import{c as k}from"./index-BRNWFSEf.js";import{c as b,d as n,k as E,v as C}from"./index-C5caIrke.js";import{t as m,i as v}from"./index-DyXZFt-t.js";import{c as I,a as T,d as y,g as H}from"./index-Cq1GvU5P.js";import{t as D}from"./index-3UVeZ5B9.js";import{t as P,a as S}from"./index-NfPDfnaY.js";import{c as F}from"./index-Ctx6eFvH.js";var x=k("switch").parts("root","label","control","thumb"),u=x.build(),i=b({getRootId:e=>{var d;return((d=e.ids)==null?void 0:d.root)??`switch:${e.id}`},getLabelId:e=>{var d;return((d=e.ids)==null?void 0:d.label)??`switch:${e.id}:label`},getThumbId:e=>{var d;return((d=e.ids)==null?void 0:d.thumb)??`switch:${e.id}:thumb`},getControlId:e=>{var d;return((d=e.ids)==null?void 0:d.control)??`switch:${e.id}:control`},getHiddenInputId:e=>{var d;return((d=e.ids)==null?void 0:d.hiddenInput)??`switch:${e.id}:input`},getRootEl:e=>i.getById(e,i.getRootId(e)),getHiddenInputEl:e=>i.getById(e,i.getHiddenInputId(e))});function $(e,d,t){const o=e.context.isDisabled,a=e.context.readOnly,r=e.context.checked,s=!o&&e.context.focused,p=!o&&e.context.focusVisible,l={"data-active":n(e.context.active),"data-focus":n(s),"data-focus-visible":n(p),"data-readonly":n(a),"data-hover":n(e.context.hovered),"data-disabled":n(o),"data-state":e.context.checked?"checked":"unchecked","data-invalid":n(e.context.invalid)};return{checked:r,disabled:o,focused:s,setChecked(c){d({type:"CHECKED.SET",checked:c,isTrusted:!1})},toggleChecked(){d({type:"CHECKED.TOGGLE",checked:r,isTrusted:!1})},getRootProps(){return t.label({...u.root.attrs,...l,dir:e.context.dir,id:i.getRootId(e.context),htmlFor:i.getHiddenInputId(e.context),onPointerMove(){o||d({type:"CONTEXT.SET",context:{hovered:!0}})},onPointerLeave(){o||d({type:"CONTEXT.SET",context:{hovered:!1}})},onClick(c){if(o)return;E(c)===i.getHiddenInputEl(e.context)&&c.stopPropagation()}})},getLabelProps(){return t.element({...u.label.attrs,...l,dir:e.context.dir,id:i.getLabelId(e.context)})},getThumbProps(){return t.element({...u.thumb.attrs,...l,dir:e.context.dir,id:i.getThumbId(e.context),"aria-hidden":!0})},getControlProps(){return t.element({...u.control.attrs,...l,dir:e.context.dir,id:i.getControlId(e.context),"aria-hidden":!0})},getHiddenInputProps(){return t.input({id:i.getHiddenInputId(e.context),type:"checkbox",required:e.context.required,defaultChecked:r,disabled:o,"aria-labelledby":i.getLabelId(e.context),"aria-invalid":e.context.invalid,name:e.context.name,form:e.context.form,value:e.context.value,style:C,onFocus(){const c=v();d({type:"CONTEXT.SET",context:{focused:!0,focusVisible:c}})},onBlur(){d({type:"CONTEXT.SET",context:{focused:!1,focusVisible:!1}})},onClick(c){if(a){c.preventDefault();return}const h=c.currentTarget.checked;d({type:"CHECKED.SET",checked:h,isTrusted:!0})}})}}}var{not:g}=H;function q(e){const d=I(e);return T({id:"switch",initial:"ready",context:{checked:!1,label:"switch",value:"on",disabled:!1,...d,fieldsetDisabled:!1,focusVisible:!1},computed:{isDisabled:t=>t.disabled||t.fieldsetDisabled},watch:{disabled:"removeFocusIfNeeded",checked:"syncInputElement"},activities:["trackFormControlState","trackPressEvent","trackFocusVisible"],on:{"CHECKED.TOGGLE":[{guard:g("isTrusted"),actions:["toggleChecked","dispatchChangeEvent"]},{actions:["toggleChecked"]}],"CHECKED.SET":[{guard:g("isTrusted"),actions:["setChecked","dispatchChangeEvent"]},{actions:["setChecked"]}],"CONTEXT.SET":{actions:["setContext"]}},states:{ready:{}}},{guards:{isTrusted:(t,o)=>!!o.isTrusted},activities:{trackPressEvent(t){if(!t.isDisabled)return D({pointerNode:i.getRootEl(t),keyboardNode:i.getHiddenInputEl(t),isValidKey:o=>o.key===" ",onPress:()=>t.active=!1,onPressStart:()=>t.active=!0,onPressEnd:()=>t.active=!1})},trackFocusVisible(t){if(!t.isDisabled)return m({root:i.getRootNode(t)})},trackFormControlState(t,o,{send:a,initialContext:r}){return P(i.getHiddenInputEl(t),{onFieldsetDisabledChange(s){t.fieldsetDisabled=s},onFormReset(){a({type:"CHECKED.SET",checked:!!r.checked,src:"form-reset"})}})}},actions:{setContext(t,o){Object.assign(t,o.context)},syncInputElement(t){const o=i.getHiddenInputEl(t);o&&(o.checked=!!t.checked)},removeFocusIfNeeded(t){t.disabled&&t.focused&&(t.focused=!1)},setChecked(t,o){f.checked(t,o.checked)},toggleChecked(t,o){f.checked(t,!t.checked)},dispatchChangeEvent(t){const o=i.getHiddenInputEl(t);S(o,{checked:t.checked})}}})}var N={change:e=>{var d;(d=e.onCheckedChange)==null||d.call(e,{checked:e.checked})}},f={checked:(e,d)=>{y(e.checked,d)||(e.checked=d,N.change(e))}};F()(["checked","dir","disabled","form","getRootNode","id","ids","invalid","label","name","onCheckedChange","readOnly","required","value"]);export{x as a,$ as c,q as m};
