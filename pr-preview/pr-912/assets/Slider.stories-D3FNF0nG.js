import{j as e}from"./jsx-runtime-CQsLhzk5.js";import{r as v}from"./index-Wp2u197Z.js";import{H as j}from"./h-stack-C-JeAGHw.js";import{S as T,a as m,b as V,c as w,d as _,e as I,f as M,g as C,h as D,i as P,j as R}from"./slider-BK09eGR4.js";const y=v.forwardRef(function(i,f){const{marks:o,label:l,showValue:u,...h}=i,n=i.defaultValue??i.value,r=o==null?void 0:o.map(t=>typeof t=="number"?{value:t,label:void 0}:t),g=!!(r!=null&&r.some(t=>t.label));return e.jsxs(T,{ref:f,thumbAlignment:"center",...h,children:[l&&!u&&e.jsx(m,{fontWeight:"medium",children:l}),l&&u&&e.jsxs(j,{justify:"space-between",children:[e.jsx(m,{fontWeight:"medium",children:l}),e.jsx(V,{})]}),e.jsxs(w,{mb:g?"4":void 0,children:[e.jsx(_,{children:e.jsx(I,{})}),n==null?void 0:n.map((t,s)=>e.jsx(M,{index:s,children:e.jsx(C,{})},s))]}),(r==null?void 0:r.length)&&e.jsx(D,{children:r.map((t,s)=>{const x=typeof t=="number"?t:t.value,S=typeof t=="number"?void 0:t.label;return e.jsxs(P,{value:x,children:[e.jsx(R,{}),S]},s)})})]})}),z={title:"Komponenter/Slider",component:y,parameters:{docs:{story:{inline:!0},canvas:{sourceState:"shown"}}},argTypes:{"aria-label":{description:"The static string to use used for `aria-label` if no visible label is used.",table:{type:{summary:"string"}},control:{type:"text"}},"aria-labelledby":{description:"The static string `aria-labelledby` that points to the ID of the element that serves as label for the slider.",table:{type:{summary:"string"}},control:{type:"text"}},"aria-valuetext":{description:"The static string to use used for `aria-valuetext`",table:{type:{summary:"string"}},control:{type:"text"}},getAriaValueText:{description:"Function that returns the `aria-valuetext` for screen readers. It is mostly used to generate a more human-readable representation of the value for assistive technologies",table:{type:{summary:"(value: number) => string"}},control:{type:"text"}},id:{description:"The base id to use for the slider and its components",table:{type:{summary:"string"}},control:{type:"text"}},colorScheme:{description:"Color of slider",table:{type:{summary:"green | blue| gray | red"},defaultValue:{summary:"blue"}},options:["green","blue","gray","red"],control:{type:"radio"}},size:{description:"Size of slider",table:{type:{summary:"sm | md | lg"},defaultValue:{summary:"md"}},options:["sm","md","lg"],control:{type:"radio"}},min:{description:"The minimum allowed value of the slider. Cannot be greater than max.",table:{type:{summary:"number"},defaultValue:{summary:"0"}},control:{type:"number"}},max:{description:"The maximum allowed value of the slider. Cannot be less than min.",table:{type:{summary:"number"},defaultValue:{summary:"100"}},control:{type:"number"}},isDisabled:{description:"If true, the slider will be disabled",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}},control:"boolean"},defaultValue:{description:"The initial value of the slider in uncontrolled mode",table:{type:{summary:"number[]"}},control:{type:"array"}}},args:{defaultValue:[40]}},a={args:{"aria-label":"sliderDefault",id:"slider"},render:d=>e.jsx(y,{...d})};var c,p,b;a.parameters={...a.parameters,docs:{...(c=a.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    "aria-label": "sliderDefault",
    id: "slider"
  },
  render: (args: SliderProps) => <KvibSlider {...args} />
}`,...(b=(p=a.parameters)==null?void 0:p.docs)==null?void 0:b.source}}};const E=["Preview"],L=Object.freeze(Object.defineProperty({__proto__:null,Preview:a,__namedExportsOrder:E,default:z},Symbol.toStringTag,{value:"Module"}));export{a as P,L as S};
