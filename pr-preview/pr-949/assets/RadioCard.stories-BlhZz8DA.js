import{j as e}from"./index-D6_wGsWO.js";import{bx as i,by as n,H as d,bz as u}from"./index-DRbqkqp1.js";const m={title:"Komponenter/Radio Card",component:i,parameters:{docs:{story:{inline:!0},canvas:{sourceState:"hidden"}}},argTypes:{size:{description:"Size of the component",table:{type:{summary:"sm | md | lg"},defaultValue:{summary:"md"}},options:["sm","md","lg"],control:{type:"radio"}},defaultChecked:{description:"If true, the radio wil be initially checked",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},inputProps:{description:"Additional props forwarded to the input element",table:{type:{summary:""}}},disabled:{description:"If true, the radio will be disabled",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},variant:{description:"The variant of the radio",table:{type:{summary:"string"}},control:{type:"text"}},focusable:{description:"If true, and isDisabled is true, the radio will remain focusable but not interactive",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},checked:{description:"If true, the radio will be set as checked. You need to pass onChange to update its value (since it is controlled)",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},invalid:{description:"If true, the radio will be invalid. Sets 'aria-invalid' to true",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},readOnly:{description:"If true, the radio will be read-only",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},required:{description:"If true, the radio button will be required. Sets 'aria-required' to true",table:{type:{summary:"boolean"}},defaultValue:{summary:"false"},control:{type:"boolean"}},onChange:{description:"The function that is ran when the state of the radio changes",table:{type:{summary:"callback()"}},defaultValue:{summary:"none"}},colorPalette:{description:"Color of the radio",table:{type:{summary:"green | blue | gray | red"},defaultValue:{summary:"green"}},options:["green","blue","gray","red","orange","purple"],control:{type:"radio"}}}},p=[{value:"valg1",title:"Valg 1"},{value:"valg2",title:"Valg 2"}],c=t=>e.jsxs(i,{defaultValue:"next",...t,children:[e.jsx(n,{children:"Velg et kort"}),e.jsx(d,{align:"stretch",children:p.map(r=>e.jsx(u,{label:r.title,value:r.value},r.value))})]}),a={render:t=>e.jsx(c,{...t})};var o,l,s;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: args => <RadioCardExample {...args} />
}`,...(s=(l=a.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const y=["Preview"],h=Object.freeze(Object.defineProperty({__proto__:null,Preview:a,__namedExportsOrder:y,default:m},Symbol.toStringTag,{value:"Module"}));export{a as P,h as R};
