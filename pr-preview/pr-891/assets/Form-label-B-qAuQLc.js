import{j as i}from"./extends-CwFRzn3r.js";import{f as o}from"./forward-ref-BWI-Phbn.js";import{u as m,a as v}from"./form-control-r5o_asaM.js";import{u as _,o as F}from"./use-style-config-YUvqttAg.js";import{c}from"./factory-C6UFhaBW.js";import{c as f}from"./cx-BDMMs1jM.js";const p=o(function(a,r){const e=_("FormLabel",a),t=F(a),{className:s,children:h,requiredIndicator:y=i.jsx(b,{}),optionalIndicator:q=null,...d}=t,l=m(),I=(l==null?void 0:l.getLabelProps(d,r))??{ref:r,...d};return i.jsxs(c.label,{...I,className:f("chakra-form__label",t.className),__css:{display:"block",textAlign:"start",...e},children:[h,l!=null&&l.isRequired?y:q]})});p.displayName="FormLabel";const b=o(function(a,r){const e=m(),t=v();if(!(e!=null&&e.isRequired))return null;const s=f("chakra-form__required-indicator",a.className);return i.jsx(c.span,{...e==null?void 0:e.getRequiredIndicatorProps(a,r),__css:t.requiredIndicator,className:s})});b.displayName="RequiredIndicator";const u=o(({label:n,children:a,...r},e)=>i.jsxs(p,{...r,ref:e,fontWeight:"bold",children:[n,a]}));try{u.displayName="FormLabel",u.__docgenInfo={description:"",displayName:"FormLabel",props:{htmlTranslate:{defaultValue:null,description:"",name:"htmlTranslate",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"yes"'},{value:'"no"'}]}},label:{defaultValue:{value:'"label"'},description:"Label for the form component",name:"label",required:!1,type:{name:"string | undefined"}},requiredIndicator:{defaultValue:null,description:"",name:"requiredIndicator",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | undefined"}},optionalIndicator:{defaultValue:null,description:"",name:"optionalIndicator",required:!1,type:{name:"ReactNode"}},isRequired:{defaultValue:{value:"false"},description:"If `true`, the form control will be required. This has 2 side effects:\n- The `FormLabel` will show a required indicator\n- The form element (e.g, Input) will have `aria-required` set to `true`",name:"isRequired",required:!1,type:{name:"boolean | undefined"}},isDisabled:{defaultValue:{value:"false"},description:"If `true`, the form control will be disabled. This has 2 side effects:\n- The `FormLabel` will have `data-disabled` attribute\n- The form element (e.g, Input) will be disabled",name:"isDisabled",required:!1,type:{name:"boolean | undefined"}},isInvalid:{defaultValue:{value:"false"},description:"If `true`, the form control will be invalid. This has 2 side effects:\n- The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n- The form element (e.g, Input) will have `aria-invalid` set to `true`",name:"isInvalid",required:!1,type:{name:"boolean | undefined"}},isReadOnly:{defaultValue:{value:"false"},description:"If `true`, the form control will be readonly",name:"isReadOnly",required:!1,type:{name:"boolean | undefined"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType | undefined"}}}}}catch{}export{u as F};
