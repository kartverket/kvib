import{j as e}from"./jsx-runtime-DgHZ7iq2.js";import{useMDXComponents as x}from"./index-BGZZYR5m.js";import"./chunk-NUUEMKO5-DY3eZO8L.js";import{ae as j}from"./index-CAuArX3e.js";import{s as m,t as p}from"./index-CRrqj8Jn.js";import{K as u}from"./Kodeeksempel-C30GH8Rp.js";import{u as k}from"./factory-CpD2hwoa.js";import{T as a,a as l,b as n,e as t,d}from"./table-B-PQpmxl.js";import{F as c}from"./flex-BzzyrBhv.js";import{C as b}from"./code-DB9a5aB3.js";import{T as g}from"./text-Dwwg-e87.js";import"./index-C7I6S4tq.js";import"./iframe-DAfEPh2Y.js";import"../sb-preview/runtime.js";import"./react-18-BzWPIXJh.js";import"./index-EN4ZLXvn.js";import"./index-DGxgJC0M.js";import"./index-CHGET4sZ.js";import"./index-DrFu-skq.js";import"./index-6Bgnn7vh.js";import"./create-recipe-context-BAHgkp5l.js";import"./empty-DSVal0bC.js";import"./use-recipe-CYrRhjTN.js";import"./grid-ssdSjSnm.js";import"./use-event-DluRpvc7.js";import"./create-context-B_OvqDKw.js";import"./factory-C8pPPz6n.js";import"./walk-object-Ct_lkoEm.js";import"./create-split-props-L-tVc3XO.js";import"./editable-BymdoWyO.js";import"./create-slot-recipe-context-KvBbDfRP.js";import"./use-environment-context-CwI7sxJj.js";import"./use-field-context-B739sAKC.js";import"./fieldset-7O9opABx.js";import"./tabs-D3FBrevG.js";import"./aspect-ratio-BDUPmLpt.js";import"./badge-CiIWorhQ.js";import"./bleed-Be2diQ6W.js";import"./box-Bmov6X-Z.js";import"./card-MKiKGmSR.js";import"./center-BjTi-jDO.js";import"./container-CPeF9f1M.js";import"./float-BUxgzbw7.js";import"./highlight-C9lHo1pP.js";import"./grid-item-CQ9trW14.js";import"./simple-grid-BKKqsyC0.js";import"./image-BxPC7XNr.js";import"./kbd-BL1YlofU.js";import"./separator-gkbq4TJY.js";import"./skip-nav-link-D46LELhs.js";import"./spinner-DLHOy98U.js";import"./stack-DR__wOga.js";import"./textarea-CD5y-Dey.js";import"./heading-c0bs7S-P.js";import"./portal-BqskmCPs.js";const C=()=>{const i=k().breakpoints;return e.jsxs(e.Fragment,{children:[e.jsxs(a,{width:"100%",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Navn"}),e.jsx(t,{width:"50%",children:"Verdi"}),e.jsx(t,{width:"30%",children:"Kode"})]})}),e.jsx(d,{children:i.values.map(r=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r.name}),e.jsx(t,{backgroundColor:"white",children:r.min}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",children:[e.jsx(b,{children:`breakpoints.${r.name}`}),e.jsx(m,{value:`breakpoints.${r.name}`,children:e.jsx(p,{})})]})})]},r.name))})]}),e.jsx(g,{as:"h2",fontSize:"lg",fontWeight:700,mt:"2rem",children:"Breakpoint-betingelser"}),e.jsx(u,{beskrivelse:`
        For å gjøre det enklere å hente ut breakpoint-betingelser tilbyr Kvib støttefunksjonen getBreakpointCondition() som tar systemet man bruker og navnet på et breakpoint som argument og returnerer en media query i CSS. Nyttig i kombinasjon med useMediaQuery-hooken.
      `,kildekode:`
const system = useKvibContext();
const isTablet = useMediaQuery(getBreakpointCondition(system, "mdToLg"));
console.log(isTablet); // true hvis skjermstørrelsen er mellom md og lg
`}),e.jsxs(a,{width:"100%",marginTop:"2rem",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Betingelse"}),e.jsx(t,{width:"80%",children:"Media Query"})]})}),e.jsx(d,{children:Object.entries(i.conditions).map(([r,s])=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",alignItems:"center",children:[s,e.jsx(m,{value:s,children:e.jsx(p,{})})]})})]},r))})]})]})};function h(o){const i={h2:"h2",...x(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(j,{title:"Komponenter/Tokens/Breakpoints"}),`
`,e.jsx(i.h2,{id:"breakpoints",children:"Breakpoints"}),`
`,e.jsx(C,{})]})}function we(o={}){const{wrapper:i}={...x(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(h,{...o})}):h(o)}export{we as default};
