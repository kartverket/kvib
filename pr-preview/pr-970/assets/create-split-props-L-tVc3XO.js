var d=(e,a=[])=>({parts:(...t)=>{if(l(a))return d(e,t);throw new Error("createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?")},extendWith:(...t)=>d(e,[...a,...t]),rename:t=>d(t,a),keys:()=>a,build:()=>[...new Set(a)].reduce((t,r)=>Object.assign(t,{[r]:{selector:[`&[data-scope="${o(e)}"][data-part="${o(r)}"]`,`& [data-scope="${o(e)}"][data-part="${o(r)}"]`].join(", "),attrs:{"data-scope":o(e),"data-part":o(r)}}}),{})}),o=e=>e.replace(/([A-Z])([A-Z])/g,"$1-$2").replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase(),l=e=>e.length===0;const i=()=>(e,a)=>a.reduce((t,r)=>{const[n,c]=t,s=r;return c[s]!==void 0&&(n[s]=c[s]),delete c[s],[n,c]},[{},{...e}]);export{i as a,d as c};
