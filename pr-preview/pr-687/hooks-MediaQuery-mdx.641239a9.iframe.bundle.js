"use strict";(self.webpackChunk_kvib_storybook=self.webpackChunk_kvib_storybook||[]).push([[7465],{"./stories/hooks/MediaQuery.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MediaQuery});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/index.mjs"),templates=__webpack_require__("./stories/templates/index.ts"),blocks_dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs");const MediaQueryAPIRefStrings="// single media query with no options\nconst [isLargerThan800] = useMediaQuery('(min-width: 800px)')\n\n// ssr-friendly media query with fallback\nconst [isLargerThan800] = useMediaQuery('(min-width: 800px)', {\nssr: true,\nfallback: false, // return false on the server, and re-evaluate on the client side\n})",MediaQueryStrings="function Example() {\n  const [isLargerThan1280] = useMediaQuery('(min-width: 1280px)')\n\n  return (\n    <Text>\n      {isLargerThan1280 ? 'larger than 1280px' : 'smaller than 1280px'}\n    </Text>\n  )\n}",MediaQueryBrowserStrings="function Example() {\n  const [isLargerThanHD, isDisplayingInBrowser] = useMediaQuery([\n    '(min-width: 1920px)',\n    '(display-mode: browser)',\n  ])\n  function determineText() {\n    if (isLargerThanHD) {\n      return 'high resolution you got there in your browser'\n    }\n    return isDisplayingInBrowser\n      ? 'rendering in a browser'\n      : 'rendering on something else, e.g. PWA'\n  }'\n  return <Text>{determineText()}</Text>\n}";var react_dist=__webpack_require__("../../packages/react/dist/index.mjs"),chunk_ALC6QPCI=__webpack_require__("../../node_modules/@chakra-ui/alert/dist/chunk-ALC6QPCI.mjs"),chunk_PULVB27S=__webpack_require__("../../node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs"),chunk_CUKBNH6U=__webpack_require__("../../node_modules/@chakra-ui/alert/dist/chunk-CUKBNH6U.mjs"),chunk_57I6FYPZ=__webpack_require__("../../node_modules/@chakra-ui/media-query/dist/chunk-57I6FYPZ.mjs"),chunk_2OOHT3W5=__webpack_require__("../../node_modules/@chakra-ui/layout/dist/chunk-2OOHT3W5.mjs");const MediaQueryExample=()=>{const[isLargerThan1280]=(0,chunk_57I6FYPZ.a)("(min-width: 1280px)");return(0,jsx_runtime.jsx)(chunk_2OOHT3W5.x,{children:isLargerThan1280?"larger than 1280px":"smaller than 1280px"})};MediaQueryExample.displayName="MediaQueryExample";const MediaQueryBrowserExample=()=>{const[isLargerThanHD,isDisplayingInBrowser]=(0,chunk_57I6FYPZ.a)(["(min-width: 1920px)","(display-mode: browser)"]);return(0,jsx_runtime.jsx)(chunk_2OOHT3W5.x,{children:isLargerThanHD?"high resolution you got there "+(isDisplayingInBrowser?"in your browser":"on your screen"):isDisplayingInBrowser?"rendering in a browser":"rendering on something else, e.g. PWA"})};function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",strong:"strong",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Hooks/useMediaQuery"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"usemediaquery",children:"useMediaQuery"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"useMediaQuery"})," er en tilpasset hook som brukes for å hjelpe med å oppdage om en enkelt medieforespørsel eller flere medieforespørsler matcher individuelt."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import { useMediaQuery } from "@kvib/react";\n'})}),"\n",(0,jsx_runtime.jsx)(templates.x2,{component:"useMediaQuery"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(templates.I4,{children:"API Reference"}),"\n",(0,jsx_runtime.jsx)(_components.strong,{children:"useMediaQuery"})," aksepterer enten en enkelt medieforespørsel eller en rekke medieforespørsler, og valgfritt et objekt som inneholder en ",(0,jsx_runtime.jsx)(_components.strong,{children:"ssr"})," boolean og en ",(0,jsx_runtime.jsx)(_components.strong,{children:"fallback"}),"-streng."]}),"\n",(0,jsx_runtime.jsx)(blocks_dist.Hw,{code:MediaQueryAPIRefStrings,dark:!0}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Hvis vi er på serveren, vil ",(0,jsx_runtime.jsx)(_components.strong,{children:"ssr"}),"-alternativet avgjøre om vi skal returnere ",(0,jsx_runtime.jsx)(_components.strong,{children:"fallback"}),"-verdien eller utføre forespørselen direkte. ",(0,jsx_runtime.jsx)(_components.strong,{children:"fallback"}),"-eigenskapen er det som vil bli returnert hvis ",(0,jsx_runtime.jsx)(_components.strong,{children:"ssr"})," er satt til ",(0,jsx_runtime.jsx)(_components.strong,{children:"true"})," og vi er i en serverkontekst."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(templates.I4,{children:"Return value"}),"\n",(0,jsx_runtime.jsx)(_components.strong,{children:"useMediaQuery"})," returnerer en array av booleans, som indikerer om den gitte forespørselen matcher eller om forespørslene matcher."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Hvorfor en array? ",(0,jsx_runtime.jsx)(_components.strong,{children:"useMediaQuery"})," aksepterer både en streng og en array av strenger, men vil alltid returnere en array. På denne måten kan du kombinere flere medieforespørsler som vil bli individuelt matchet i ett kall."]}),"\n",(0,jsx_runtime.jsxs)(react_dist.bZj,{status:"warning",children:[(0,jsx_runtime.jsx)(chunk_ALC6QPCI.z,{}),(0,jsx_runtime.jsx)(chunk_PULVB27S.xu,{children:(0,jsx_runtime.jsx)(chunk_CUKBNH6U.X,{children:(0,jsx_runtime.jsxs)(_components.p,{children:["Husk at denne API-en er avhengig av nettleserens støtte for ",(0,jsx_runtime.jsx)(_components.strong,{children:"window.matchMedia"}),", og vil alltid returnere ",(0,jsx_runtime.jsx)(_components.strong,{children:"false"})," hvis det ikke støttes eller ikke eksisterer (for eksempel under serverside rendering)."]})})})]}),"\n",(0,jsx_runtime.jsxs)(templates.Zu,{children:[(0,jsx_runtime.jsx)(templates.Z$,{title:"Bruk",description:"",isVertical:!0,story:(0,jsx_runtime.jsxs)(blocks_dist.Xz,{children:[(0,jsx_runtime.jsx)(MediaQueryExample,{}),(0,jsx_runtime.jsx)(blocks_dist.Hw,{code:MediaQueryStrings,dark:!0})]})}),(0,jsx_runtime.jsx)(templates.Z$,{title:"",description:"",isVertical:!0,story:(0,jsx_runtime.jsxs)(blocks_dist.Xz,{children:[(0,jsx_runtime.jsx)(MediaQueryBrowserExample,{}),(0,jsx_runtime.jsx)(blocks_dist.Hw,{code:MediaQueryBrowserStrings,dark:!0})]})})]})]})}MediaQueryBrowserExample.displayName="MediaQueryBrowserExample";const MediaQuery=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);