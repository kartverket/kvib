import{j as p}from"./jsx-runtime-D_zvdyIk.js";import{r as u}from"./index-BqsZ9I6k.js";import{u as Y,d as v,c as g,a as k,m as E}from"./factory-CLW_3um3.js";import{a as _}from"./empty-DSVal0bC.js";function A(m){const{key:i,recipe:x}=m,t=Y();return u.useMemo(()=>{const N=x||(i!=null?t.getSlotRecipe(i):{});return t.sva(structuredClone(N))},[i,x,t])}const F=m=>m.charAt(0).toUpperCase()+m.slice(1),D=m=>{const{key:i,recipe:x}=m,t=F(i||x.className||"Component"),[N,R]=v({name:`${t}StylesContext`,errorMessage:`use${t}Styles returned is 'undefined'. Seems you forgot to wrap the components in "<${t}.Root />" `}),[P,w]=v({name:`${t}ClassNameContext`,errorMessage:`use${t}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in "<${t}.Root />" `,strict:!1}),[T,S]=v({strict:!1,name:`${t}PropsContext`,providerName:`${t}PropsContext`,defaultValue:{}});function h(s){const{unstyled:o,...e}=s,r=A({key:i,recipe:e.recipe||x}),[a,n]=u.useMemo(()=>r.splitVariantProps(e),[e,r]);return{styles:u.useMemo(()=>o?_:r(a),[o,a,r]),classNames:r.classNameMap,props:n}}function L(s,o={}){const{defaultProps:e}=o,r=a=>{const n=S(),l=u.useMemo(()=>E(e,n,a),[n,a]),{styles:d,classNames:f,props:y}=h(l);return p.jsx(N,{value:d,children:p.jsx(P,{value:f,children:p.jsx(s,{...y})})})};return r.displayName=s.displayName||s.name,r}return{StylesProvider:N,ClassNamesProvider:P,PropsProvider:T,usePropsContext:S,useRecipeResult:h,withProvider:(s,o,e)=>{const{defaultProps:r,...a}=e??{},n=g(s,{},a),l=u.forwardRef((d,f)=>{var $;const y=S(),c=u.useMemo(()=>E(r??{},y,d),[y,d]),{styles:C,props:O,classNames:j}=h(c),V=j[o],M=p.jsx(N,{value:C,children:p.jsx(P,{value:j,children:p.jsx(n,{ref:f,...O,css:[C[o],c.css],className:k(c.className,V)})})});return(($=e==null?void 0:e.wrapElement)==null?void 0:$.call(e,M,c))??M});return l.displayName=s.displayName||s.name,l},withContext:(s,o,e)=>{const r=g(s,{},e),a=u.forwardRef((n,l)=>{const{unstyled:d,...f}=n,y=R(),c=w(),C=c==null?void 0:c[o];return p.jsx(r,{...f,css:[!d&&o?y[o]:void 0,n.css],ref:l,className:k(n.className,C)})});return a.displayName=s.displayName||s.name,a},withRootProvider:L,useStyles:R,useClassNames:w}};export{D as c,A as u};
