import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as x}from"./index-6TxjLnhd.js";import"./index-D-74AlUA.js";import{s as m,t as p}from"./index-Ck2gLP12.js";import{K as j}from"./Kodeeksempel-rRmZ3XH9.js";import{u}from"./factory-CLW_3um3.js";import{T as a,a as l,b as n,e as t,d}from"./table-BBNZHThI.js";import{F as c}from"./flex-DUV5s85r.js";import{C as k}from"./code-DMxT0Itq.js";import{T as b}from"./index-Czj1CPHY.js";import{M as g}from"./index-CtwOQLhG.js";import"./index-BqsZ9I6k.js";import"./preview-ntQlP8la.js";import"./iframe-SUPFkenp.js";import"./DocsRenderer-CFRXHY34-BxuJgKfM.js";import"./react-18-CDM3aYty.js";import"./index-BYXsJVy_.js";import"./index-DSremx2O.js";import"./index-C0ANy_2v.js";import"./create-recipe-context-CidDYf5s.js";import"./empty-DSVal0bC.js";import"./grid-D7zmzRN2.js";import"./index-dcatZdxD.js";import"./index-D07EZmij.js";import"./factory-CI2KYaro.js";import"./index-B9Psn0MX.js";import"./index-C4Y1pAIC.js";import"./highlight-CONrKPDg.js";import"./aspect-ratio-B4o9M3pm.js";import"./walk-object-DVJOboBV.js";import"./separator-BineIgi8.js";import"./index-0TWAmYWa.js";import"./editable-BvURgTRs.js";import"./create-slot-recipe-context-ChV7OG0U.js";import"./use-environment-context-CZyUaQ1u.js";import"./use-field-context-CIlwFtfl.js";import"./fieldset-fEbd05pz.js";import"./link-BiL6BNnQ.js";import"./tabs-hWGrtb57.js";import"./badge-CmmdpEqz.js";import"./bleed-BjsqCldF.js";import"./spinner-Ck8-qYqZ.js";import"./card-DOoV0p1G.js";import"./center-Dya8YcZT.js";import"./stack-Ul3ip2Cd.js";import"./container-B5zglyBS.js";import"./float-DRwE1b_G.js";import"./grid-item-DAxUUvnb.js";import"./image-FCEjUmhj.js";import"./kbd-BBuFYvCh.js";import"./link-box-B3gg9W_m.js";import"./simple-grid-DTK2oWqb.js";import"./skip-nav-link-Cvguycdu.js";import"./textarea--SkXaGi3.js";import"./visually-hidden-UH-Y7ggj.js";import"./portal-1tNdsG63.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";const C=()=>{const i=u().breakpoints;return e.jsxs(e.Fragment,{children:[e.jsxs(a,{width:"100%",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Navn"}),e.jsx(t,{width:"50%",children:"Verdi"}),e.jsx(t,{width:"30%",children:"Bruk"})]})}),e.jsx(d,{children:i.values.map(r=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r.name}),e.jsx(t,{backgroundColor:"white",children:r.min}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",children:[e.jsx(k,{children:`breakpoints.${r.name}`}),e.jsx(m,{value:`breakpoints.${r.name}`,children:e.jsx(p,{})})]})})]},r.name))})]}),e.jsx(b,{as:"h2",fontSize:"lg",fontWeight:700,mt:"2rem",children:"Breakpoint-betingelser"}),e.jsx(j,{beskrivelse:`
        For å gjøre det enklere å hente ut breakpoint-betingelser tilbyr Kvib støttefunksjonen getBreakpointCondition() som tar systemet man bruker og navnet på et breakpoint som argument og returnerer en media query i CSS. Nyttig i kombinasjon med useMediaQuery-hooken.
      `,kildekode:`
const system = useKvibContext();
const isTablet = useMediaQuery(getBreakpointCondition(system, "mdToLg"));
console.log(isTablet); // true hvis skjermstørrelsen er mellom md og lg
`}),e.jsxs(a,{width:"100%",marginTop:"2rem",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Betingelse"}),e.jsx(t,{width:"80%",children:"Media Query"})]})}),e.jsx(d,{children:Object.entries(i.conditions).map(([r,s])=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",alignItems:"center",children:[s,e.jsx(m,{value:s,children:e.jsx(p,{})})]})})]},r))})]})]})};function h(o){const i={h2:"h2",...x(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(g,{title:"Komponenter/Tokens/Breakpoints"}),`
`,e.jsx(i.h2,{id:"breakpoints",children:"Breakpoints"}),`
`,e.jsx(C,{})]})}function Be(o={}){const{wrapper:i}={...x(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(h,{...o})}):h(o)}export{Be as default};
