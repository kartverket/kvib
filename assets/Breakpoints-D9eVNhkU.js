import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{useMDXComponents as x}from"./index-CfoPgG5w.js";import"./index-Orx0Iz9-.js";import{s as m,t as p}from"./index-BmmIebgE.js";import{K as j}from"./Kodeeksempel-IADqJpRo.js";import{u}from"./factory-pl1wLBYD.js";import{T as a,a as l,b as n,e as t,d}from"./table-mbgVTzeK.js";import{F as c}from"./flex-Br_6hloE.js";import{C as k}from"./code-1_VME73E.js";import{T as b}from"./text-DN4IV3-T.js";import{M as g}from"./index-CT8ZTMra.js";import"./index-Bj2TM2QZ.js";import"./preview-BafyTXpZ.js";import"./iframe-jon2IDvt.js";import"./DocsRenderer-CFRXHY34-C35bpCmo.js";import"./react-18-mqHmL3K7.js";import"./index-kjvw1_fE.js";import"./index-Bs7GjyIo.js";import"./create-recipe-context-DYiacIet.js";import"./empty-DSVal0bC.js";import"./grid-jasc0pCp.js";import"./index-BGbegxtG.js";import"./create-context-Dx5LeRZQ.js";import"./factory-OQRc9M2v.js";import"./index-CVNl4AZj.js";import"./create-slot-recipe-context-DgxmRWlj.js";import"./aspect-ratio-CAuboeZ_.js";import"./walk-object-DWvS5iFr.js";import"./separator-BNn5sDgl.js";import"./index-BqWtAW9h.js";import"./editable-EMIlbeXl.js";import"./use-environment-context-B22iOzJ9.js";import"./use-field-context-1QGiO1Aa.js";import"./fieldset-W6DYpKsI.js";import"./link-Dwuusza2.js";import"./tabs-BjLtBxIu.js";import"./badge-b3_3SUt1.js";import"./bleed-XXdFbytk.js";import"./box-BGguGcLy.js";import"./spinner-CuRI6N7E.js";import"./card-OfHgEyTV.js";import"./center-ButSt4yq.js";import"./stack-mCRVjjbS.js";import"./container-D8eBFey8.js";import"./highlight-BwYutGWa.js";import"./float-CbEw7epy.js";import"./grid-item-BL2-00m7.js";import"./simple-grid-DGWi7hMH.js";import"./image-OkR7rKz_.js";import"./kbd-B2j_-PiN.js";import"./link-box-V4_Jj2MN.js";import"./skip-nav-link-BC8crZtK.js";import"./textarea-wloWA6cK.js";import"./heading-DMt6CN8-.js";import"./visually-hidden-BI2e4u6t.js";import"./portal-EfEQ2Dgj.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";const C=()=>{const i=u().breakpoints;return e.jsxs(e.Fragment,{children:[e.jsxs(a,{width:"100%",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Navn"}),e.jsx(t,{width:"50%",children:"Verdi"}),e.jsx(t,{width:"30%",children:"Bruk"})]})}),e.jsx(d,{children:i.values.map(r=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r.name}),e.jsx(t,{backgroundColor:"white",children:r.min}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",children:[e.jsx(k,{children:`breakpoints.${r.name}`}),e.jsx(m,{value:`breakpoints.${r.name}`,children:e.jsx(p,{})})]})})]},r.name))})]}),e.jsx(b,{as:"h2",fontSize:"lg",fontWeight:700,mt:"2rem",children:"Breakpoint-betingelser"}),e.jsx(j,{beskrivelse:`
        For å gjøre det enklere å hente ut breakpoint-betingelser tilbyr Kvib støttefunksjonen getBreakpointCondition() som tar systemet man bruker og navnet på et breakpoint som argument og returnerer en media query i CSS. Nyttig i kombinasjon med useMediaQuery-hooken.
      `,kildekode:`
const system = useKvibContext();
const isTablet = useMediaQuery(getBreakpointCondition(system, "mdToLg"));
console.log(isTablet); // true hvis skjermstørrelsen er mellom md og lg
`}),e.jsxs(a,{width:"100%",marginTop:"2rem",children:[e.jsx(l,{textAlign:"left",children:e.jsxs(n,{children:[e.jsx(t,{width:"20%",children:"Betingelse"}),e.jsx(t,{width:"80%",children:"Media Query"})]})}),e.jsx(d,{children:Object.entries(i.conditions).map(([r,s])=>e.jsxs(n,{children:[e.jsx(t,{backgroundColor:"white",children:r}),e.jsx(t,{backgroundColor:"white",children:e.jsxs(c,{gap:"1rem",justifyContent:"space-between",alignItems:"center",children:[s,e.jsx(m,{value:s,children:e.jsx(p,{})})]})})]},r))})]})]})};function h(o){const i={h2:"h2",...x(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(g,{title:"Komponenter/Tokens/Breakpoints"}),`
`,e.jsx(i.h2,{id:"breakpoints",children:"Breakpoints"}),`
`,e.jsx(C,{})]})}function Be(o={}){const{wrapper:i}={...x(),...o.components};return i?e.jsx(i,{...o,children:e.jsx(h,{...o})}):h(o)}export{Be as default};
